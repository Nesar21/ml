import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# Load the Titanic dataset (must be in the same directory)
df = pd.read_csv("titanic.csv")

# Select important features and drop missing values
df = df[["Survived", "Pclass", "Sex", "Age", "SibSp", "Parch"]]
df = df.dropna()

# Convert categorical 'Sex' column to numeric
df["Sex"] = df["Sex"].map({"male": 0, "female": 1})

# Define features and target
X = df.drop("Survived", axis=1)
y = df["Survived"]

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Train Naive Bayes classifier
model = GaussianNB()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluate
print("Accuracy:", accuracy_score(y_test, y_pred))
